{"version":3,"sources":["components/Section.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","index.js"],"names":["Section","this","props","title","children","Component","ContactListItem","id","name","number","onDeleteContact","type","onClick","ContactList","list","map","ContactForm","state","handleChange","e","target","value","setState","uuidv4","handleSubmit","preventDefault","onSubmit","reset","nameId","telId","htmlFor","pattern","required","onChange","Filter","App","contacts","filter","formSubmitHandler","item","normalizedName","toLowerCase","find","el","alert","changeContacts","prevState","changeFilter","getFilteredContacts","normalizedFilter","contact","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAEMA,E,4JACJ,WACE,MAA4BC,KAAKC,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,oCACE,6BAAKD,IACJC,S,GANaC,aAYPL,ICZTM,E,4JACJ,WACE,MAA8CL,KAAKC,MAA3CK,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,gBAC1B,OACE,+BACE,iCAAOF,EAAP,OACA,+BAAOC,IACP,wBAAQE,KAAK,SAASJ,GAAIA,EAAIK,QAAS,kBAAMF,EAAgBH,IAA7D,2B,GAPsBF,aAefC,ICdTO,E,4JACJ,WACE,MAAkCZ,KAAKC,MAA/BY,EAAR,EAAQA,KAAMJ,EAAd,EAAcA,gBACd,OACE,6BACGI,EAAKC,KAAI,gBAAGR,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACR,cAAC,EAAD,CAEEF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRC,gBAAiBA,GAJZH,Y,GAPSF,aAmBXQ,I,eClBTG,E,4MACJC,MAAQ,CACNT,KAAM,GACNC,OAAQ,I,EAGVS,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,EAAKC,SAAL,aACEf,GAAIgB,eACHf,EAAOa,K,EAIZG,aAAe,SAAAL,GACbA,EAAEM,iBACF,EAAKvB,MAAMwB,SAAS,EAAKT,OACzB,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEd,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,IAAMmB,EAASL,cACTM,EAAQN,cACNC,EAA+BvB,KAA/BuB,aAAcN,EAAiBjB,KAAjBiB,aACtB,EAAyBjB,KAAKgB,MAAtBT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMiB,SAAUF,EAAhB,UACE,uBAAOM,QAASF,EAAhB,kBACA,uBACEjB,KAAK,OACLH,KAAK,OACLuB,QAAQ,yHACR5B,MAAM,kcACN6B,UAAQ,EACRX,MAAOb,EACPD,GAAIqB,EACJK,SAAUf,IAEZ,uBAAOY,QAASD,EAAhB,oBACA,uBACElB,KAAK,MACLH,KAAK,SACLuB,QAAQ,yFACR5B,MAAM,giBACN6B,UAAQ,EACRX,MAAOZ,EACPF,GAAIsB,EACJI,SAAUf,IAEZ,wBAAQP,KAAK,SAAb,gC,GArDkBN,aA+DXW,IChETkB,E,4JACJ,WACE,MAA4BjC,KAAKC,MAAzBmB,EAAR,EAAQA,MAAOY,EAAf,EAAeA,SACf,OACE,gCACE,uBAAOH,QAASP,cAAhB,mCACA,uBAAOZ,KAAK,OAAOU,MAAOA,EAAOd,GAAIgB,cAAUU,SAAUA,W,GAN5C5B,aAYN6B,ICPTC,E,4MACJlB,MAAQ,CACNmB,SAAU,CACR,CAAE7B,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,SAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhD4B,OAAQ,I,EAiBVC,kBAAoB,SAAAC,GAClB,IAAQH,EAAa,EAAKnB,MAAlBmB,SACFI,EAAiBD,EAAK/B,KAAKiC,cACjCL,EAASM,MAAK,SAAAC,GACZ,OAAOA,EAAGnC,KAAKiC,gBAAkBD,KAE/BI,MAAM,GAAD,OAAIL,EAAK/B,KAAT,4BACL,EAAKqC,eAAeN,I,EAG1BM,eAAiB,SAAAN,GACf,EAAKjB,UAAS,SAAAwB,GAAS,MAAK,CAC1BV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BG,S,EAItCQ,aAAe,SAAA5B,GACb,EAAKG,SAAS,CAAEe,OAAQlB,EAAEC,OAAOC,S,EAGnC2B,oBAAsB,WACpB,MAA6B,EAAK/B,MAA1BoB,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVa,EAAmBZ,EAAOI,cAChC,OAAOL,EAASC,QAAO,SAAAa,GAAO,OAC5BA,EAAQ1C,KAAKiC,cAAcU,SAASF,O,EAIxCG,cAAgB,SAAA7C,GACd,EAAKe,UAAS,SAAAwB,GAAS,MAAK,CAC1BV,SAAUU,EAAUV,SAASC,QAAO,SAAAM,GAAE,OAAIA,EAAGpC,KAAOA,U,uDA5CxD,WACE,IAAM6B,EAAWiB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMrB,GAC9BmB,GACFtD,KAAKqB,SAAS,CAAEc,SAAUmB,M,gCAI9B,SAAmBG,EAAWZ,GACxB7C,KAAKgB,MAAMmB,WAAaU,EAAUV,UACpCiB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU3D,KAAKgB,MAAMmB,a,oBAsC/D,WACE,IAAMyB,EAAmB5D,KAAK+C,sBACtBV,EAAoCrC,KAApCqC,kBAAmBS,EAAiB9C,KAAjB8C,aACnBV,EAAWpC,KAAKgB,MAAhBoB,OACR,OACE,gCACE,cAAC,EAAD,CAASlC,MAAM,YAAf,SACE,cAAC,EAAD,CAAauB,SAAUY,MAEzB,eAAC,EAAD,CAASnC,MAAM,WAAf,UACE,cAAC,EAAD,CAAQkB,MAAOgB,EAAQJ,SAAUc,IACjC,cAAC,EAAD,CACEjC,KAAM+C,EACNnD,gBAAiBT,KAAKmD,0B,GAxEhB/C,aAgFH8B,IClFf2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e21762f7.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Section extends Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    );\n  }\n}\n\nexport default Section;\n","import { Component } from 'react';\n\nclass ContactListItem extends Component {\n  render() {\n    const { id, name, number, onDeleteContact } = this.props;\n    return (\n      <li>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" id={id} onClick={() => onDeleteContact(id)}>\n          Delete\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default ContactListItem;\n","import { Component } from 'react';\nimport ContactListItem from './ContactListItem';\n\nclass ContactList extends Component {\n  render() {\n    const { list, onDeleteContact } = this.props;\n    return (\n      <ul>\n        {list.map(({ id, name, number }) => (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      id: uuidv4(),\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const nameId = uuidv4();\n    const telId = uuidv4();\n    const { handleSubmit, handleChange } = this;\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={handleSubmit}>\n        <label htmlFor={nameId}>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          id={nameId}\n          onChange={handleChange}\n        />\n        <label htmlFor={telId}>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          id={telId}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n\nexport default ContactForm;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Filter extends Component {\n  render() {\n    const { value, onChange } = this.props;\n    return (\n      <div>\n        <label htmlFor={uuidv4()}>Find contacts by name</label>\n        <input type=\"text\" value={value} id={uuidv4()} onChange={onChange} />\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import './App.css';\nimport { Component } from 'react';\n\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = item => {\n    const { contacts } = this.state;\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : this.changeContacts(item);\n  };\n\n  changeContacts = item => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, item],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(el => el.id !== id),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n    const { formSubmitHandler, changeFilter } = this;\n    const { filter } = this.state;\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={formSubmitHandler} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={changeFilter} />\n          <ContactList\n            list={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}